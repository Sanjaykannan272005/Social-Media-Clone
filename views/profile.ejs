<%- include('partials/header') %>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            <!-- User profile card -->
            <div class="card mb-4">
                <div class="card-body text-center">
                    <img src="<%= currentUser.avatar || '/images/default-avatar.png' %>" class="rounded-circle mb-3" width="100" height="100" alt="<%= currentUser.username %>">
                    <h5 class="card-title"><%= currentUser.username %></h5>
                    <p class="card-text text-muted"><%= currentUser.email %></p>
                    <a href="/profile" class="btn btn-outline-primary btn-sm">Edit Profile</a>
                </div>
            </div>
            
            <!-- Navigation -->
            <div class="list-group mb-4">
                <a href="/dashboard" class="list-group-item list-group-item-action">
                    <i class="fas fa-home me-2"></i> Home
                </a>
                <a href="/posts" class="list-group-item list-group-item-action">
                    <i class="fas fa-newspaper me-2"></i> Posts
                </a>
                <a href="/messages" class="list-group-item list-group-item-action">
                    <i class="fas fa-envelope me-2"></i> Messages
                </a>
                <a href="/profile" class="list-group-item list-group-item-action active">
                    <i class="fas fa-user me-2"></i> Profile
                </a>
                <a href="/settings" class="list-group-item list-group-item-action">
                    <i class="fas fa-cog me-2"></i> Settings
                </a>
            </div>
        </div>
        
        <div class="col-md-6">
            <!-- Profile header -->
            <div class="card mb-4">
                <div class="card-body p-0">
                    <div class="position-relative">
                        <img src="<%= user.cover_image || '/images/default-cover.png' %>" class="w-100" style="height: 200px; object-fit: cover;" alt="Cover" id="coverImage">
                        <% if (user.id === currentUser.id) { %>
                            <button class="btn btn-sm btn-light position-absolute bottom-0 end-0 m-2" onclick="document.getElementById('coverInput').click()">
                                <i class="fas fa-camera"></i> Change Cover
                            </button>
                            <input type="file" id="coverInput" hidden accept="image/*">
                        <% } %>
                    </div>
                    
                    <div class="p-3">
                        <div class="d-flex">
                            <div class="position-relative mt-n5">
                                <div class="position-relative d-inline-block">
                                    <img src="<%= user.avatar || '/images/default-avatar.png' %>" class="rounded-circle border border-3 border-white" width="100" height="100" alt="Avatar" id="avatarImage">
                                    <% if (user.id === currentUser.id) { %>
                                        <button class="btn btn-sm btn-light position-absolute rounded-circle" style="width: 32px; height: 32px; padding: 0; right: 0; bottom: 0;" onclick="document.getElementById('avatarInput').click()">
                                            <i class="fas fa-camera"></i>
                                        </button>
                                        <input type="file" id="avatarInput" hidden accept="image/*">
                                    <% } %>
                                </div>
                            </div>
                            
                            <div class="ms-3 mt-3">
                                <div class="d-flex align-items-center">
                                    <h4 class="mb-0"><%= user.username %> <%= user.is_verified ? '<i class="fas fa-check-circle text-primary"></i>' : '' %></h4>
                                    <div class="ms-3">
                                        <% if (user.id === currentUser.id) { %>
                                            <button onclick="toggleEditMode()" class="btn btn-sm btn-outline-primary">Edit Profile</button>
                                        <% } else { %>
                                            <button onclick="toggleFollow(<%= user.id %>)" class="btn btn-sm <%= typeof isFollowing !== 'undefined' && isFollowing ? 'btn-primary' : 'btn-outline-primary' %>">
                                                <%= typeof isFollowing !== 'undefined' && isFollowing ? 'Following' : 'Follow' %>
                                            </button>
                                            <button onclick="startChat('<%= user.id %>', '<%= user.username %>', '<%= user.avatar || '/images/default-avatar.png' %>')" class="btn btn-sm btn-outline-secondary ms-2">
                                                <i class="fas fa-envelope"></i>
                                            </button>
                                            <button onclick="toggleBlock(<%= user.id %>)" class="btn btn-sm <%= typeof isBlocked !== 'undefined' && isBlocked ? 'btn-danger' : 'btn-outline-danger' %> ms-2">
                                                <%= typeof isBlocked !== 'undefined' && isBlocked ? 'Unblock' : 'Block' %>
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                                <p class="text-muted mt-2 mb-0"><%= user.bio || 'No bio yet.' %></p>
                                <% if (user.website) { %>
                                    <p class="mt-1 mb-0">
                                        <a href="<%= user.website.startsWith('http') ? user.website : 'https://' + user.website %>" 
                                           target="_blank" class="text-primary">
                                            <i class="fas fa-link me-1"></i><%= user.website %>
                                        </a>
                                    </p>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    
                    <div class="border-top p-3">
                        <div class="row text-center">
                            <div class="col">
                                <div class="fw-bold"><%= stats.posts %></div>
                                <div class="text-muted">Posts</div>
                            </div>
                            <div class="col">
                                <a href="/profile/<%= user.username %>/followers" class="text-decoration-none">
                                    <div class="fw-bold"><%= stats.followers %></div>
                                    <div class="text-muted">Followers</div>
                                </a>
                            </div>
                            <div class="col">
                                <a href="/profile/<%= user.username %>/following" class="text-decoration-none">
                                    <div class="fw-bold"><%= stats.following %></div>
                                    <div class="text-muted">Following</div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- User posts -->
            <div id="user-posts-container">
                <div class="text-center py-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading posts...</span>
                    </div>
                </div>
            </div>
            
            <!-- Private account message (will be shown/hidden via JavaScript) -->
            <div id="private-account-message" class="card mb-4" style="display: none;">
                <div class="card-body text-center py-5">
                    <i class="fas fa-lock mb-3" style="font-size: 3rem; color: #ddd;"></i>
                    <h5>This Account is Private</h5>
                    <p class="text-muted">Follow this account to see their posts.</p>
                    <button onclick="toggleFollow(<%= user.id %>)" class="btn btn-primary mt-2">
                        Follow
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <!-- Search Users -->
            <div class="card mb-4">
                <div class="card-header">
                    Search Users
                </div>
                <div class="card-body">
                    <div class="search-container">
                    <div class="input-group">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" id="userSearchInput" class="form-control border-start-0" placeholder="Search by username...">
                    </div>
                    <span class="clear-search" id="clearSearch"><i class="fas fa-times"></i></span>
                </div>
                    <div id="searchResults" class="mt-2" style="max-height: 300px; overflow-y: auto;">
                        <!-- Search results will appear here -->
                    </div>
                </div>
            </div>
            
            <!-- Suggestions -->
            <div class="card mb-4">
                <div class="card-header">
                    Who to follow
                </div>
                <div class="card-body p-0">
                    <div id="suggestedUsers">
                        <div class="text-center py-3">
                            <div class="spinner-border spinner-border-sm text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProfileForm">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" class="form-control" id="username" name="username" value="<%= user.username %>">
                    </div>
                    <div class="mb-3">
                        <label for="bio" class="form-label">Bio</label>
                        <textarea class="form-control" id="bio" name="bio" rows="3"><%= user.bio || '' %></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>">
                    </div>
                    <div class="mb-3">
                        <label for="website" class="form-label">Website</label>
                        <input type="url" class="form-control" id="website" name="website" value="<%= user.website || '' %>">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveProfileBtn">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script src="/js/profile.js"></script>
<script src="/js/cover-upload.js"></script>
<script src="/js/search.js"></script>
<script src="/js/suggestions.js"></script>
<script>
    const defaultAvatar = '/images/default-avatar.png';
    const userId = "<%= user.id %>";
    const currentUserId = "<%= currentUser.id %>";
    let editProfileModal;
    
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize Bootstrap modal
        editProfileModal = new bootstrap.Modal(document.getElementById('editProfileModal'));
        
        // Load user posts
        loadUserPosts();
        
        // Save profile button
        document.getElementById('saveProfileBtn').addEventListener('click', saveProfile);
    });
    
    // Load user posts
    async function loadUserPosts() {
        try {
            const response = await fetch(`/api/users/${userId}/posts`);
            if (!response.ok) throw new Error('Failed to load posts');
            
            const data = await response.json();
            const postsContainer = document.getElementById('user-posts-container');
            const privateMessage = document.getElementById('private-account-message');
            
            postsContainer.innerHTML = '';
            
            // Check if this is a private account response
            if (data.private) {
                postsContainer.style.display = 'none';
                privateMessage.style.display = 'block';
                return;
            } else {
                postsContainer.style.display = 'block';
                privateMessage.style.display = 'none';
            }
            
            const posts = Array.isArray(data) ? data : [];
            
            if (posts.length === 0) {
                postsContainer.innerHTML = `
                    <div class="text-center py-5">
                        <i class="far fa-image mb-3" style="font-size: 3rem; color: #ddd;"></i>
                        <h5>No posts yet</h5>
                        ${userId === currentUserId ? 
                            '<a href="/dashboard" class="btn btn-primary mt-2">Create your first post</a>' : 
                            ''}
                    </div>
                `;
                return;
            }
            
            posts.forEach(post => {
                const postElement = document.createElement('div');
                postElement.className = 'card mb-3';
                postElement.dataset.postId = post.id;
                
                let mediaHtml = '';
                if (post.media_url) {
                    if (post.media_type === 'image') {
                        mediaHtml = `<img src="${post.media_url}" class="card-img-top" alt="Post image">`;
                    } else if (post.media_type === 'video') {
                        mediaHtml = `<video src="${post.media_url}" class="card-img-top" controls></video>`;
                    }
                }
                
                postElement.innerHTML = `
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-2">
                            <img src="${post.avatar || defaultAvatar}" class="rounded-circle me-2" width="40" height="40" alt="${post.username}">
                            <div>
                                <h6 class="mb-0">${post.username}</h6>
                                <small class="text-muted">${new Date(post.created_at).toLocaleString()}</small>
                            </div>
                            ${post.user_id == currentUserId ? `
                                <div class="dropdown ms-auto">
                                    <button class="btn btn-sm btn-link text-muted" type="button" data-bs-toggle="dropdown">
                                        <i class="fas fa-ellipsis-h"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end">
                                        <li><a class="dropdown-item edit-post-btn" href="#" data-post-id="${post.id}">Edit</a></li>
                                        <li><a class="dropdown-item delete-post-btn" href="#" data-post-id="${post.id}">Delete</a></li>
                                    </ul>
                                </div>
                            ` : ''}
                        </div>
                        <p class="card-text">${post.content}</p>
                        ${mediaHtml}
                        <div class="d-flex mt-3">
                            <button class="btn btn-sm btn-outline-secondary me-2 like-btn" data-post-id="${post.id}">
                                <i class="${post.user_liked ? 'fas' : 'far'} fa-heart" ${post.user_liked ? 'style="color: #e74c3c;"' : ''}></i> <span>${post.likes_count || 0}</span>
                            </button>
                            <button class="btn btn-sm btn-outline-secondary me-2 comment-btn" data-post-id="${post.id}">
                                <i class="far fa-comment"></i> <span>${post.comments ? post.comments.length : 0}</span>
                            </button>
                            <button class="btn btn-sm btn-outline-secondary share-btn" data-post-id="${post.id}">
                                <i class="far fa-share-square"></i>
                            </button>
                        </div>
                    </div>
                `;
                
                postsContainer.appendChild(postElement);
                
                // Add event listeners
                const likeBtn = postElement.querySelector(`.like-btn[data-post-id="${post.id}"]`);
                likeBtn.addEventListener('click', () => toggleLike(post.id));
                
                const deleteBtn = postElement.querySelector(`.delete-post-btn[data-post-id="${post.id}"]`);
                if (deleteBtn) {
                    deleteBtn.addEventListener('click', (e) => {
                        e.preventDefault();
                        if (confirm('Are you sure you want to delete this post?')) {
                            deletePost(post.id);
                        }
                    });
                }
            });
            
        } catch (err) {
            console.error('Error loading posts:', err);
            document.getElementById('user-posts-container').innerHTML = 
                '<div class="alert alert-danger">Failed to load posts. Please try again later.</div>';
        }
    }
    
    function toggleEditMode() {
        editProfileModal.show();
    }
    
    async function saveProfile() {
        const form = document.getElementById('editProfileForm');
        const formData = new FormData(form);
        const userData = {
            username: formData.get('username'),
            bio: formData.get('bio'),
            email: formData.get('email'),
            website: formData.get('website')
        };
        
        try {
            console.log('Updating profile with data:', userData);
            const response = await fetch('/api/users/profile', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(userData)
            });
            
            if (response.ok) {
                window.location.reload();
            } else {
                const error = await response.json();
                alert(`Error: ${error.error || 'Failed to update profile'}`);
            }
        } catch (err) {
            console.error('Error updating profile:', err);
            alert('Failed to update profile. Please try again.');
        }
    }
    
    async function toggleFollow(userId) {
        try {
            const btn = event.target;
            const isFollowing = btn.classList.contains('btn-primary');
            
            const response = await fetch(`/api/users/${userId}/follow`, {
                method: isFollowing ? 'DELETE' : 'POST'
            });

            if (response.ok) {
                btn.classList.toggle('btn-primary');
                btn.classList.toggle('btn-outline-primary');
                btn.textContent = isFollowing ? 'Follow' : 'Following';
                
                // Update followers count
                const followersCount = document.querySelector('.fw-bold:nth-of-type(2)');
                followersCount.textContent = parseInt(followersCount.textContent) + (isFollowing ? -1 : 1);
            }
        } catch (err) {
            console.error('Follow error:', err);
        }
    }
    
    async function toggleLike(postId) {
        try {
            const response = await fetch(`/api/posts/${postId}/like`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });
            
            if (response.ok) {
                const result = await response.json();
                const likeBtn = document.querySelector(`.like-btn[data-post-id="${postId}"]`);
                const likeCount = likeBtn.querySelector('span');
                const likeIcon = likeBtn.querySelector('i');
                
                if (result.liked) {
                    likeIcon.classList.remove('far');
                    likeIcon.classList.add('fas');
                    likeIcon.style.color = '#e74c3c';
                } else {
                    likeIcon.classList.remove('fas');
                    likeIcon.classList.add('far');
                    likeIcon.style.color = '';
                }
                
                // Update like count
                likeCount.textContent = parseInt(likeCount.textContent) + (result.liked ? 1 : -1);
            }
        } catch (err) {
            console.error('Error toggling like:', err);
        }
    }
    
    async function deletePost(postId) {
        try {
            const response = await fetch(`/api/posts/${postId}`, {
                method: 'DELETE'
            });
            
            if (response.ok) {
                // Remove post from UI
                const postElement = document.querySelector(`[data-post-id="${postId}"]`);
                if (postElement) {
                    postElement.remove();
                }
            } else {
                const error = await response.json();
                alert('Error deleting post: ' + (error.error || 'Unknown error'));
            }
        } catch (err) {
            console.error('Error deleting post:', err);
            alert('Error deleting post. Please try again.');
        }
    }
    
    async function toggleBlock(userId) {
        try {
            const btn = event.target;
            const isBlocked = btn.classList.contains('btn-danger');
            
            const response = await fetch(`/api/users/${userId}/block`, {
                method: isBlocked ? 'DELETE' : 'POST'
            });

            if (response.ok) {
                btn.classList.toggle('btn-danger');
                btn.classList.toggle('btn-outline-danger');
                btn.textContent = isBlocked ? 'Block' : 'Unblock';
                
                if (!isBlocked) {
                    alert('User has been blocked');
                    window.location.reload();
                }
            }
        } catch (err) {
            console.error('Block error:', err);
        }
    }
    
    function startChat(userId, username, avatar) {
        // Store user info in session storage
        sessionStorage.setItem('chatUser', JSON.stringify({
            id: userId,
            username: username,
            avatar: avatar
        }));
        
        // Redirect to messages page
        window.location.href = '/messages';
    }
</script>
</body>
</html>